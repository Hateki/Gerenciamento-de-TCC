package br.edu.unipampa.model;
// Generated 02/07/2014 19:53:43 by Hibernate Tools 3.6.0

import br.edu.unipampa.model.web.AcessoSistema;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

/**
 * Aluno generated by hbm2java
 */
public class Aluno implements java.io.Serializable {

    private int matricula;
    private Pessoa pessoa;
    private Integer cargaHoraria;
    private Set bancas = new HashSet(0);
    private Set temas = new HashSet(0);

    public Aluno() {
    }

    public Aluno(int matricula, Pessoa pessoa) {
        this.matricula = matricula;
        this.pessoa = pessoa;
    }

    public Aluno(int matricula, Pessoa pessoa, Integer cargaHoraria, Set bancas, Set temas) {
        this.matricula = matricula;
        this.pessoa = pessoa;
        this.cargaHoraria = cargaHoraria;
        this.bancas = bancas;
        this.temas = temas;
    }

    public int getMatricula() {
        return this.matricula;
    }

    public void setMatricula(int matricula) {
        this.matricula = matricula;
    }

    public Pessoa getPessoa() {
        return this.pessoa;
    }

    public void setPessoa(Pessoa pessoa) {
        this.pessoa = pessoa;
    }

    public Integer getCargaHoraria() {
        return this.cargaHoraria;
    }

    public void setCargaHoraria(Integer cargaHoraria) {
        this.cargaHoraria = cargaHoraria;
    }

    public Set getBancas() {
        return this.bancas;
    }

    public void setBancas(Set bancas) {
        this.bancas = bancas;
    }

    public Set getTemas() {
        return this.temas;
    }

    public void setTemas(Set temas) {
        this.temas = temas;
    }

    public String getSenha() {
        return pessoa.getSenha();
    }

    public String getNome() {
        return pessoa.getNome();
    }

    public String getUsuario() {
        return pessoa.getUsuario();
    }

    public boolean cadastrarTema(int matriculaAluno, String usuarioProfessor, String descricaoTema) {
        List<Professor> professoresEncontrados;
        List<Aluno> alunosEncontrados;
        Aluno aluno = null;
        Professor professor = null;
        Tema tema = new Tema();
        AcessoSistema acessoSistema = new AcessoSistema();

        professoresEncontrados = acessoSistema.procurarListaProfessores();
        alunosEncontrados = acessoSistema.procurarListaAlunos();

        if (professoresEncontrados != null || alunosEncontrados != null) {
            for (Aluno alunoEncontrado : alunosEncontrados) {
                if (alunoEncontrado.getMatricula() == matriculaAluno) {
                    aluno = alunoEncontrado;
                    break;
                }
            }

            for (Professor professorEncontrado : professoresEncontrados) {
                if (professorEncontrado.getUsuario().equals(usuarioProfessor)) {
                    professor = professorEncontrado;
                }
            }
            
            tema.setAluno(aluno);
            tema.setProfessor(professor);
            tema.setAprovado(Tema.NAO_APROVADO);
            tema.setDescricao(descricaoTema);
            
            return acessoSistema.cadastrarTema(tema);
        }
        return false;
    }

}
